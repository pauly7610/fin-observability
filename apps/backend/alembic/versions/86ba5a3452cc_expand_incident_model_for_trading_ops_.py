"""expand incident model for trading ops observability

Revision ID: 86ba5a3452cc
Revises: 20250610_merge_approval_and_worm
Create Date: 2025-06-10 15:42:50.342470

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "86ba5a3452cc"
down_revision: Union[str, None] = "20250610_merge_approval_and_worm"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_approval_requests_resource_id", table_name="approval_requests")
    op.drop_index("ix_approval_requests_resource_type", table_name="approval_requests")
    op.drop_table("approval_requests")
    op.add_column("incidents", sa.Column("type", sa.String(), nullable=True))
    op.add_column("incidents", sa.Column("desk", sa.String(), nullable=True))
    op.add_column("incidents", sa.Column("trader", sa.String(), nullable=True))
    op.add_column("incidents", sa.Column("priority", sa.Integer(), nullable=True))
    op.add_column("incidents", sa.Column("root_cause", sa.String(), nullable=True))
    op.add_column(
        "incidents", sa.Column("recommended_action", sa.String(), nullable=True)
    )
    op.add_column("incidents", sa.Column("source_event_id", sa.String(), nullable=True))
    op.add_column(
        "incidents", sa.Column("detection_method", sa.String(), nullable=True)
    )
    op.add_column(
        "incidents", sa.Column("last_event_timestamp", sa.DateTime(), nullable=True)
    )
    op.create_index(op.f("ix_incidents_desk"), "incidents", ["desk"], unique=False)
    op.create_index(
        op.f("ix_incidents_priority"), "incidents", ["priority"], unique=False
    )
    op.create_index(op.f("ix_incidents_trader"), "incidents", ["trader"], unique=False)
    op.create_index(op.f("ix_incidents_type"), "incidents", ["type"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_incidents_type"), table_name="incidents")
    op.drop_index(op.f("ix_incidents_trader"), table_name="incidents")
    op.drop_index(op.f("ix_incidents_priority"), table_name="incidents")
    op.drop_index(op.f("ix_incidents_desk"), table_name="incidents")
    op.drop_column("incidents", "last_event_timestamp")
    op.drop_column("incidents", "detection_method")
    op.drop_column("incidents", "source_event_id")
    op.drop_column("incidents", "recommended_action")
    op.drop_column("incidents", "root_cause")
    op.drop_column("incidents", "priority")
    op.drop_column("incidents", "trader")
    op.drop_column("incidents", "desk")
    op.drop_column("incidents", "type")
    op.create_table(
        "approval_requests",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("resource_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("resource_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("requested_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "pending", "approved", "rejected", "escalated", name="approvalstatus"
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("reason", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("decision_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("decision_reason", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "decided_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "meta",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["decision_by"], ["users.id"], name="approval_requests_decision_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["requested_by"], ["users.id"], name="approval_requests_requested_by_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="approval_requests_pkey"),
    )
    op.create_index(
        "ix_approval_requests_resource_type",
        "approval_requests",
        ["resource_type"],
        unique=False,
    )
    op.create_index(
        "ix_approval_requests_resource_id",
        "approval_requests",
        ["resource_id"],
        unique=False,
    )
    # ### end Alembic commands ###
